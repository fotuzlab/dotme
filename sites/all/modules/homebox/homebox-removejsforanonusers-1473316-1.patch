diff --git a/homebox.admin.inc b/homebox.admin.inc
index c63bd43..95ca4ae 100644
--- a/homebox.admin.inc
+++ b/homebox.admin.inc
@@ -710,6 +710,16 @@ function homebox_configure_form($form, &$form_state, $page) {
     '#collapsed' => TRUE,
   );
 
+  $form['disablejs'] = array(
+    '#type' => 'checkbox',
+    '#title' => t('Disable JS for Anonymous users'),
+    '#description' => t('Remove the javascript so anonymous users cannot control
+      the layout or access any of the features of homebox.
+    '),
+    '#weight' => 0,
+    '#default_value' => $page->settings['disablejs'],
+  );
+
   for ($i = 1; $i <= 9; $i++) {
     $form['widths']['width_' . $i] = array(
       '#type' => 'textfield',
@@ -852,6 +862,7 @@ function homebox_configure_form_submit($form, &$form_state) {
   $page = homebox_get_page($form_state['values']['name']);
 
   // Adjust settings
+  $page->settings['disablejs'] = $form_state['values']['disablejs'];
   $page->settings['regions'] = (int) $form_state['values']['columns'];
   $page->settings['cache'] = (int) $form_state['values']['cache'];
   $page->settings['color'] = (int) $form_state['values']['colors_enabled'];
diff --git a/homebox.module b/homebox.module
index 6b00a2e..0745f8f 100644
--- a/homebox.module
+++ b/homebox.module
@@ -271,29 +271,57 @@ function homebox_theme($existing, $type, $theme, $path) {
  *  An array containing preprocessed variables (see home-box.tpl.php)
  */
 function template_preprocess_homebox(&$variables) {
+  // Check to make sure js isn't disabled for anonymous users.
+  if ($variables['page']->settings['disablejs'] == 0) {
+    // Add required jQuery UI files
+    drupal_add_library('system', 'ui.draggable');
+    drupal_add_library('system', 'ui.droppable');
+    drupal_add_library('system', 'ui.sortable');
+    drupal_add_library('system', 'ui.dialog');
 
-  // Add required jQuery UI files
-  drupal_add_library('system', 'ui.draggable');
-  drupal_add_library('system', 'ui.droppable');
-  drupal_add_library('system', 'ui.sortable');
-  drupal_add_library('system', 'ui.dialog');
+    $module_path = drupal_get_path('module', 'homebox');
 
-  $module_path = drupal_get_path('module', 'homebox');
+    // Add Homebox JavaScript files
+    drupal_add_js($module_path . '/homebox.js', array('type' => 'file', 'scope' => 'header', 'group' => JS_DEFAULT, 'defer' => FALSE, 'cache' => TRUE, 'preprocess' => TRUE));
+    drupal_add_js($module_path . '/includes/tipsy/jquery.tipsy.js', array('type' => 'file', 'scope' => 'header', 'group' => JS_DEFAULT, 'defer' => FALSE, 'cache' => TRUE, 'preprocess' => TRUE));
 
-  // Add Homebox JavaScript files
-  drupal_add_js($module_path . '/homebox.js', array('type' => 'file', 'scope' => 'header', 'group' => JS_DEFAULT, 'defer' => FALSE, 'cache' => TRUE, 'preprocess' => TRUE));
-  drupal_add_js($module_path . '/includes/tipsy/jquery.tipsy.js', array('type' => 'file', 'scope' => 'header', 'group' => JS_DEFAULT, 'defer' => FALSE, 'cache' => TRUE, 'preprocess' => TRUE));
+    // Add CSS for homebox
+    drupal_add_css($module_path . '/homebox.css', array('type' => 'file', 'group' => CSS_DEFAULT, 'media' => 'all', 'preprocess' => TRUE));
+    drupal_add_css($module_path . '/includes/tipsy/tipsy.css', array('type' => 'file', 'group' => CSS_DEFAULT, 'media' => 'all', 'preprocess' => TRUE));
 
-  // Add CSS for homebox
-  drupal_add_css($module_path . '/homebox.css', array('type' => 'file', 'group' => CSS_DEFAULT, 'media' => 'all', 'preprocess' => TRUE));
-  drupal_add_css($module_path . '/includes/tipsy/tipsy.css', array('type' => 'file', 'group' => CSS_DEFAULT, 'media' => 'all', 'preprocess' => TRUE));
+    $variables['classes_array'][] = 'column-count-' . $variables['column_count'];
+    $variables['classes_array'][] = 'homebox-' . $variables['page']->name;
 
+    if (isset($variables['page']->settings['auto_save']) && $variables['page']->settings['auto_save']) {
+      $variables['classes_array'][] = 'homebox-auto-save';
+    }
+  }
+  else {
+    global $user;
+    if ($user->uid >= 1) {
+      // Add required jQuery UI files
+      drupal_add_library('system', 'ui.draggable');
+      drupal_add_library('system', 'ui.droppable');
+      drupal_add_library('system', 'ui.sortable');
+      drupal_add_library('system', 'ui.dialog');
+
+      $module_path = drupal_get_path('module', 'homebox');
+
+      // Add Homebox JavaScript files
+      drupal_add_js($module_path . '/homebox.js', array('type' => 'file', 'scope' => 'header', 'group' => JS_DEFAULT, 'defer' => FALSE, 'cache' => TRUE, 'preprocess' => TRUE));
+      drupal_add_js($module_path . '/includes/tipsy/jquery.tipsy.js', array('type' => 'file', 'scope' => 'header', 'group' => JS_DEFAULT, 'defer' => FALSE, 'cache' => TRUE, 'preprocess' => TRUE));
 
-  $variables['classes_array'][] = 'column-count-' . $variables['column_count'];
-  $variables['classes_array'][] = 'homebox-' . $variables['page']->name;
+      // Add CSS for homebox
+      drupal_add_css($module_path . '/homebox.css', array('type' => 'file', 'group' => CSS_DEFAULT, 'media' => 'all', 'preprocess' => TRUE));
+      drupal_add_css($module_path . '/includes/tipsy/tipsy.css', array('type' => 'file', 'group' => CSS_DEFAULT, 'media' => 'all', 'preprocess' => TRUE));
 
-  if (isset($variables['page']->settings['auto_save']) && $variables['page']->settings['auto_save']) {
-    $variables['classes_array'][] = 'homebox-auto-save';
+      $variables['classes_array'][] = 'column-count-' . $variables['column_count'];
+      $variables['classes_array'][] = 'homebox-' . $variables['page']->name;
+
+      if (isset($variables['page']->settings['auto_save']) && $variables['page']->settings['auto_save']) {
+        $variables['classes_array'][] = 'homebox-auto-save';
+      }
+    }
   }
 }
 
@@ -410,7 +438,7 @@ function homebox_build($page) {
     $num_regions = count($regions);
     for ($i = 1; $i <= $num_regions; $i++) {
       $width = 100 / $num_regions;
-      
+
       // We use a combination of round() and floor() to get this rounded to two decimal places
       // since the $mode argument isn't introducted into round() until PHP 5.3.0.
       $page->settings['widths'][$i] = round(floor($width * 100) / 100, 2);
@@ -596,7 +624,7 @@ function homebox_prepare_block($block_key, $page) {
   else {
     // No cache, fetch the blocks from modules
     $array = module_invoke($block->module, 'block_view', $block->delta);
-    
+
     // Allow modules to modify the block before it is viewed, via either
     // hook_block_view_alter() or hook_block_view_MODULE_DELTA_alter().
     drupal_alter(array('block_view', "block_view_{$block->module}_{$block->delta}"), $array, $block);
